import { PsychologicalProfile, AICompatibility, CosmicAlignment, EnergyVibe, GrowthPotential, MatchInsight, ConversationStarter, DateIdea } from '../types';
export declare class AIService {
    private static instance;
    private openaiApiKey;
    constructor();
    static getInstance(): AIService;
    generatePsychologicalProfile(userData: any): Promise<PsychologicalProfile>;
    calculateCompatibility(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<AICompatibility>;
    generateCosmicAlignment(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<CosmicAlignment>;
    generateEnergyVibe(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<EnergyVibe>;
    generateGrowthPotential(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<GrowthPotential>;
    generateMatchInsights(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<MatchInsight[]>;
    generateConversationStarters(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<ConversationStarter[]>;
    generateDateIdeas(profile1: PsychologicalProfile, profile2: PsychologicalProfile): Promise<DateIdea[]>;
    private analyzeBigFiveTraits;
    private analyzeEmotionalIntelligence;
    private generatePersonalityInsights;
    private generateCompatibilityFactors;
    private identifyGrowthAreas;
    private analyzeBehavioralPatterns;
    private determineAttachmentStyle;
    private determineLoveLanguages;
    private determineCommunicationStyle;
    private determineConflictResolution;
    private determineRelationshipGoals;
    private determineDatingStyle;
    private determineIntimacyLevel;
    private determineSocialEnergy;
    private identifyStrengths;
    private calculateOverallScore;
    private calculateConfidence;
    private calculateAuthenticity;
    private determineValues;
    private determineGoals;
    private determineInterests;
    private analyzeLifestyle;
    private calculatePersonalityCompatibility;
    private calculateValuesCompatibility;
    private calculateCommunicationCompatibility;
    private calculateLifestyleCompatibility;
    private calculateGoalsCompatibility;
    private calculateEmotionalCompatibility;
    private calculateIntellectualCompatibility;
    private calculatePhysicalCompatibility;
    private calculateSpiritualCompatibility;
    private calculateZodiacCompatibility;
    private calculateLifePathNumbers;
    private calculateChakraAlignment;
    private calculateElementalBalance;
    private calculateEnergyLevelMatch;
    private calculateVibrationMatch;
    private calculateAuraCompatibility;
    private calculateSpiritualAlignment;
    private calculateMutualGrowth;
    private calculateChallengeLevel;
    private calculateSupportPotential;
    private calculateLearningOpportunity;
    private calculatePersonalityDifference;
}
//# sourceMappingURL=aiService.d.ts.map